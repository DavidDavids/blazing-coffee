@page "/fetchdata"
@inject HttpClient Http
@layout DashboardCardLayout

<CardContainer Title="Employees">
    <TelerikGrid Data="employees" Pageable="true" Sortable="true" FilterMode="GridFilterMode.FilterMenu">
        <GridColumns>
            <GridColumn Field="@nameof(Employee.FullName)"></GridColumn>
            <GridColumn Field="@nameof(Employee.Address)"></GridColumn>
            <GridColumn Field="@nameof(Employee.Phone)"></GridColumn>
            <GridColumn Field="Team.TeamName" Title="Team Name">
                <Template>
                    @{
                        var e = (Employee)context;
                        <span style="color: @e.Team.TeamColor">@e.Team.TeamName</span>
                    }
                </Template>
            </GridColumn>
            <GridColumn Field="@nameof(Employee.Rating)"></GridColumn>
            <GridColumn Field="@nameof(Employee.Budget)"></GridColumn>
        </GridColumns>
    </TelerikGrid>
</CardContainer>

@code {
    private Employee[] employees;
    Product selectedProduct { get; set; }

    protected override async Task OnInitializedAsync()
    {
        employees = await Http.GetFromJsonAsync<Employee[]>("api/employees");
    }
}